CPEN 321 - MovieTier
M3: Development Information

================================================================================

1. Backend Server Information

Public IP Address: 48.221.114.47

Domain Name: server.movietier.cc

API Base URL: http://server.movietier.cc/api/


================================================================================

2. Features Satisfying Project Scope Requirements

2.1. External API Integration

The MovieTier application integrates with multiple external APIs to provide
comprehensive functionality:

- TMDB API (Movie Database)
  * Fetches movie metadata, search results, recommendations, trending movies
  * Provides watch provider information (streaming/rental/purchase availability)
  * Supplies trailer/video data for in-app playback
  * Implementation: Backend uses axios to make requests to TMDB REST API endpoints

- Google OAuth API (User Authentication)
  * Handles sign-in and sign-up authentication flows
  * Verifies Google ID tokens on backend using google-auth-library
  * Frontend uses Google Credential Manager for one-tap sign-in experience
  * Implementation: JWT tokens issued after successful Google token verification

- Firebase Cloud Messaging (Push Notifications)
  * Sends real-time notifications for friend activities and ranking updates
  * Delivers notifications for incoming/accepted friend requests
  * Works when app is backgrounded or closed
  * Implementation: Firebase Admin SDK on backend, FCM SDK on Android frontend
  * Device tokens registered via POST /api/users/fcm-token endpoint


2.2. Live Updates and Real-time Features

The application implements comprehensive real-time communication using multiple
technologies:

- Server-Sent Events (SSE) - Friend Activity Feed
  * Establishes persistent HTTP connection to /api/feed/stream
  * Delivers real-time updates when friends rank new movies
  * Pushes feed activity events with activity ID payload
  * Triggers immediate UI refresh on client side

- Server-Sent Events (SSE) - Friend Management
  * Connects to /api/friends/stream for friend-related notifications
  * Event types: friend_request, friend_request_accepted, friend_request_rejected,
    friend_request_canceled, friend_removed
  * Enables instant UI updates without polling
  * Rate-limited to 5 friend requests per minute to prevent spam

- Firebase Cloud Messaging - Background Notifications
  * Delivers mobile notifications when app is not in foreground
  * Notification types:
    - Friend ranks new movie (with movie title and rank)
    - Incoming friend request (with sender name)
    - Friend request accepted (with friend name)
  * Creates notification channels: "feed_updates" and "friend_requests"

- SSE Connection Management and Reliability
  * Implements automatic reconnection with exponential backoff
  * Uses infinite read timeout for idle connection stability
  * Sends heartbeat "connected" events to maintain connection
  * Client-side reconnection logic handles network interruptions


2.3. Additional Project Scope Features

- Comparison-based Ranking Algorithm
  * Binary comparison system for intuitive movie ranking
  * In-memory session tracking keyed by userId
  * Typically completes in 2-4 comparisons for lists of 10-20 movies
  * Average round-trip time: 100-300ms per comparison
  * MongoDB compound index (userId, rank) ensures O(log n) performance

- Social Engagement (Likes and Comments)
  * Like/unlike functionality on feed activities
  * Optimistic UI updates for instant feedback
  * Real-time like count and comment count synchronization
  * Comment system with 500 character limit
  * Comments displayed in chronological order with author metadata
  * Duplicate like prevention via unique compound index (userId, activityId)

- Personalized Recommendation Algorithm
  * Analyzes top 50% of user's ranked movies for preference signals
  * Extracts preferred genres, languages, and quality thresholds
  * Fetches similar/recommended movies from TMDB for top 30% of rankings
  * Scores candidates based on genre matching, language preference, rating, recency
  * Adds random noise (Â±5) to provide variety across refreshes
  * Returns top 20 recommendations, excluding already-ranked movies

- Watchlist Management with Auto-synchronization
  * Add movies from Discover, Feed, or Search to personal watchlist
  * Automatic removal from watchlist when movie is added to rankings
  * Ensures watchlist only contains unwatched movies
  * Sorting options: Date added (newest/oldest), Rating (high/low)
  * TMDB metadata enrichment for missing poster/overview data
  * Friends can view each other's watchlists from profile pages

- In-app Trailer Playback
  * WebView-based YouTube trailer player in 9:16 popup
  * Fetches official trailers via /api/movies/{movieId}/videos endpoint
  * Play button overlay appears on movie posters when trailer available
  * Manual fullscreen toggle using YouTube's native controls
  * Close button (X) in top-right corner for easy dismissal

- Watch Provider Integration
  * Location-based streaming/rental/purchase availability
  * Fetches data from TMDB watch providers API
  * Country detection from device locale with Canada fallback
  * Displays flatrate (streaming), rent, and buy options
  * 6-hour client-side caching in DataStore to reduce API calls
  * "Where to Watch" buttons on Feed detail, Watchlist, Friend profiles


================================================================================

3. Git Repository Information

MVP Commit Hash:
2c6fcffc97a68dc7c7e44eb6b304abf3a2722c45

Commit Message: Added Screen Mockups

Commit Date: October 27, 2025 16:58:36 PST

Branch: main

Repository: https://github.com/JimmyChan233/CPEN321-MovieTier


Note: The working MVP is on the main branch of the repository. The backend
server at server.movietier.cc (48.221.114.47) will remain operational until
grades are released. The APK can be tested on physical devices or emulators
by configuring API_BASE_URL to http://server.movietier.cc/api/ in local.properties.


================================================================================

End of Document
